plugins {
  id 'net.saliman.properties' version '1.5.2'
}

// Needed for mlcp 11.1.0.
configurations {
  mlcp {
    attributes {
      attribute(TargetJvmEnvironment.TARGET_JVM_ENVIRONMENT_ATTRIBUTE, objects.named(TargetJvmEnvironment.class, TargetJvmEnvironment.STANDARD_JVM))
    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  mlcp 'com.marklogic:mlcp:11.1.0'
  mlcp files("lib")
}

task mlcpImportMixed(type: JavaExec) {
  classpath = configurations.mlcp
  mainClass = "com.marklogic.contentpump.ContentPump"
  args = [
    "IMPORT",
    "-host", host,
    "-port", port,
    "-username", username,
    "-password", password,
    "-input_file_path", "../new-tool-cli/src/test/resources/mixed-files",
    "-output_collections", "mlcp-mixed-files",
    "-output_permissions", "rest-reader,read,rest-writer,update"
  ]
}

task ntCopy(type: Exec) {
  workingDir = "../nt/"
  commandLine "./bin/nt", "copy",
    "--clientUri", "${username}:${password}@${host}:${port}",
    "--collections", "address_small",
    "--batchSize", "500",
    // results in 24 threads total, assuming 3 forests and 4 partitions per forests, which means 12 partitions.
    "--outputThreadCount", "2",
    "--outputBatchSize", "500",
    "--outputPermissions", "rest-reader,read,rest-writer,update",
    "--outputClientUri", "${outputUsername}:${outputPassword}@${outputHost}:${outputPort}"
}

task mlcpCopy(type: JavaExec) {
  classpath = configurations.mlcp
  mainClass = "com.marklogic.contentpump.ContentPump"
  args "COPY",
    "-input_host", host,
    "-input_port", port,
    "-input_username", username,
    "-input_password", password,
    "-output_host", outputHost,
    "-output_port", outputPort,
    "-output_username", outputUsername,
    "-output_password", outputPassword,
    "-copy_collections", "false",
    "-copy_permissions", "false",
    "-copy_properties", "false",
    "-copy_properties", "false",
    "-copy_quality", "false",
    "-copy_metadata", "false",
    "-collection_filter", "address_small",
    "-output_permissions", "rest-reader,read,rest-writer,update",
    "-thread_count", "24",
    "-batch_size", "500"
}

task ntTwoWaySSL(type: Exec) {
  description = "For manual testing with the Java Client's java-unittest app server when its TwoWaySSLTest has been " +
    "paused in a debugger. You can copy the keyStore/trustStore files generated by that test to this directory and " +
    "then run this task to ensure that two-way SSL works."
  workingDir = "../nt/"
  commandLine "./bin/nt", "copy",
    "--clientUri", "rest-writer:x@localhost:8012",
    "--collections", "zipcode",
    "--keyStorePath", "../mlcp-testing/keyStore.jks",
    "--keyStorePassword", "password",
    "--trustStorePath", "../mlcp-testing/trustStore.jks",
    "--trustStorePassword", "password",
    "--sslHostnameVerifier", "any",
    "--preview", "10"
}
